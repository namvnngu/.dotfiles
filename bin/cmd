#!/usr/bin/env bash

# Find and copy/execute a command

resources_dir_path="$DOTFILES_PATH/bin/resources"

if [[ $1 == "ls" ]]; then
  find $resources_dir_path -maxdepth 1 -name "cmd*" | sed "s/^.*cmd-//" | git column --mode=column --padding=5
  exit 0
fi

###############################################################################

cmd_file_path="$resources_dir_path/cmd-$1"

# Fuzzy search
if [[ $# -eq 0 ]] ; then
  files=$(find $resources_dir_path -maxdepth 1 -name "cmd*")
  selected=$(cat $files | fzf)
elif [[ -e $cmd_file_path ]]; then
  selected=$(cat $cmd_file_path | fzf)
else
  echo "$cmd_file_path: No such file"
  exit 1
fi

if [[ -z $selected ]]; then
  exit 1
fi

selected_cmd=$(echo $selected | sed "s/^.*: //")
echo "Selected command: $selected_cmd"

# Fill up placeholders
placeholders=$(echo $selected_cmd | grep -oE "<(\w|-)+>")
if [[ -n "$placeholders" ]]; then
  echo "----------------------"
  for phd in $placeholders; do
    read -p "$phd: " phd_value
    selected_cmd=$(echo $selected_cmd | sed "s|$phd|$phd_value|")
    echo "Command: $selected_cmd"
  done
  echo "----------------------"
fi

# Perform action on command
while true; do
  read -p "copy (c) or execute (e)? " query
  query=$(echo $query | tr "[:upper:]" "[:lower:]")

  if [[ $query == c* ]]; then
    os=$(uname -s)
    case $os in
      Darwin*)
        echo -n $selected_cmd | pbcopy
        ;;
      Linux*)
        echo -n $selected_cmd | xclip -selection clipboard
        ;;
    esac

    echo "Copied to clipboard: $selected_cmd"

    exit 0
  elif [[ $query == e* ]]; then
    echo "Executing: $selected_cmd"
    eval $selected_cmd
    echo "Done!"

    exit 0
  else
    echo "You should choose copy (c) or execute (e)"
  fi
done
