#!/usr/bin/env bash

# Install eslint_d if it does not exist
if ! command -v eslint_d &> /dev/null
then
  echo "ðŸšŒ Installing eslint_d..."
  npm i -g eslint_d
fi

if [[ $* == *-h* ]]; then
  # Display Help
  echo "Fix and format git files based on the eslint config."
  echo
  echo "Syntax: ef [-s|-t|-h]"
  echo "Options:"
  echo "      -s     Only git staged files"
  echo "      -t     Only git tracked files"
  echo "      -h     Print this help and exit"
  echo

  exit 0
fi

# Find files based on flags
echo "ðŸ”Ž Finding files..."

if [[ $* == *-s* ]]; then
  files=$(git diff --name-only --diff-filter=d --cached HEAD)
elif [[ $* == *-t* ]]; then
  files=$(git diff --name-only --diff-filter=d HEAD)
else
  tracked_files=$(git diff --name-only --diff-filter=d HEAD)
  untracked_files=$(git ls-files . --exclude-standard --others)
  files=$(echo "${tracked_files} ${untracked_files}" | tr " " "\n")
fi

# Filter files
echo "ðŸ§¹ Filtering ts, js, tsx and jsx files..."

filtered_files=$(echo "$files" | grep -E "((ts|js)x?)$")

# Format filtered files
if [[ -n $filtered_files ]]; then
  echo "ðŸŽ¨ Formatting files..."
  eslint_d --fix $filtered_files

  if [ $? -eq 0 ]; then
    echo "ðŸ“ƒ List of files formatted":
    filtered_files_array=($filtered_files)
    for file in "${filtered_files_array[@]}"
    do
      :
      echo "  âœ… $file"
    done
  fi
else
  echo "ðŸ˜ž There are no changed files to be formatted"
fi
