#!/usr/bin/env bash

branches=()
BLACK="\033[0;30m"
RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
BLUE="\033[0;34m"
PURPLE="\033[0;35m"
CYAN="\033[0;36m"
WHITE="\033[0;37m"
RESET="\033[0m"
CLEAR="\033c"

function get-branch() {
  branches=()
  while IFS= read -r line; do
      branches+=( "$line" )
  done < <( git branch )

  length=${#branches[@]}
  for (( i=0; i<${length}; i++ ));
  do
    if [[ -n "$i" ]]; then
      branches[$i]=${branches[$i]:2}
      echo -e "  ${PURPLE}$i: ${RESET}${branches[$i]}"
    fi
  done
}

printf "\n"
get-branch
printf "\n  ${RESET}Enter the number (q for quit): "
read number

branch=${branches[$number]}

while : ; do
  if [[ $number == "q" ]]; then
    break
  fi

  git branch -D $branch
  success=$?

  printf "\n-------------------------------------------\n\n"
  get-branch
  if [[ -z $number ]]; then
    printf "\n   ${RED}Input required\n"
  elif (( $number >= ${#branches[@]} )); then
    printf "\n   ${RED}The given number is out of limit\n"
  elif [[ $success -ne 0 ]]; then
    printf "\n   ${RED}Cannot delete $branch since it is being checked out\n"
  else
    printf "\n   ${GREEN}Deleted $branch\n"
  fi

  printf "\n  ${RESET}Enter the number (q for quit): "
  read number
  branch=${branches[$number]}
done

printf "  âœ¨ ${RESET}Done\n"
