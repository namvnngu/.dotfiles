"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" UTILITIES                                                                   "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" System

if !exists("g:os")
  if has("win64") || has("win32") || has("win16")
    let g:os = "Windows"
  else
    let g:os = substitute(system("uname"), "\n", "", "")
  endif
endif

" File

function s:count_directories_in_path(path)
  return len(filter(globpath(a:path, '*', 0, 1), 'isdirectory(v:val)'))
endfunction

" Plugin

let s:PLUGIN_DIR = "~/.vim/pack/plugins/start"

command PlugClean call system("rm -rf " . s:PLUGIN_DIR) | echo "Removed all plugins"
command PlugCount echo "Plugin count: " . s:count_directories_in_path(s:PLUGIN_DIR)

function s:install_plugin(plugin_source_url, plugin_name)
  let l:plugin_dest_dir = expand(s:PLUGIN_DIR . "/" . a:plugin_name)

  if !isdirectory(l:plugin_dest_dir)
    echo "Installing " . a:plugin_name . "..."
    call system("git clone --depth 1 " . a:plugin_source_url . " " . l:plugin_dest_dir)
    echo "Installed " . a:plugin_name . "!"
    echo " "
  endif
endfunction

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" OPTIONS                                                                     "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

syntax on

filetype plugin indent on

let mapleader = " "

set autoindent
set autoread
set background=light
set backspace+=nostop
set breakindent
set clipboard+=unnamedplus,unnamed
set cmdheight=1
set colorcolumn=80
set completeopt=menu,menuone,noselect,noinsert
set copyindent
set cursorline
set expandtab
set fileencoding=utf-8
set foldcolumn=1
set foldenable
set foldlevel=99
set foldlevelstart=99
set foldmethod=manual
set grepformat=%f:%l:%c:%m
set grepprg=rg\ --vimgrep
set history=100
set hlsearch
set ignorecase
set incsearch
set infercase
set laststatus=2
set linebreak
set modelines=5
set nobackup
set noswapfile
set noundofile
set nowrap
set nowritebackup
set number
set omnifunc=syntaxcomplete#Complete
set preserveindent
set pumheight=100
set relativenumber
set scrolloff=8
set shiftround
set shiftwidth=2
set showmode
set showtabline=0
set sidescrolloff=8
set signcolumn=yes
set smartcase
set smartindent
set smoothscroll
set splitbelow
set splitright
set statusline=%<%F\ %h%m%r%=%-14.(%l,%c%V%)\ %P
set tabstop=2
set termguicolors
set timeoutlen=500
set undolevels=10000
set updatetime=50
set viewoptions-=curdir
set virtualedit=block
set wildmenu
set wildmode=longest:full,full
set wildoptions=pum,tagfile
set winminwidth=5

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MAPPINGS                                                                    "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Move to window
nnoremap <leader>h :wincmd h<CR>
nnoremap <leader>j :wincmd j<CR>
nnoremap <leader>k :wincmd k<CR>
nnoremap <leader>l :wincmd l<CR>

" Resize window
nnoremap <Up> :resize +2<CR>
nnoremap <Down> :resize -2<CR>
nnoremap <Left> :vertical resize -2<CR>
nnoremap <Right> :vertical resize +2<CR>

" Yanking
nnoremap <leader>ya :%y+<CR>
nnoremap <leader>y "+y
vnoremap <leader>y "+y
nnoremap <leader>Y "+y$
nnoremap Y y$

" Buffers
nnoremap <leader>bn :bnext<CR>
nnoremap <leader>bp :bprevious<CR>
nnoremap <leader>bd :bdelete<CR>
nnoremap <leader>ba :bufdo bd<CR>
nnoremap <leader>be :%bd\|e#<CR>

" Better indenting
vnoremap < <gv
vnoremap > >gv

"  Move lines
nnoremap <leader>md :m .+1<CR>==
nnoremap <leader>mu :m .-2<CR>==
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

" Clear search with <Esc>
nnoremap <Esc> :noh<CR>

" Keeping it centered and stable
nnoremap J mzJ`z
nnoremap n nzzzv
nnoremap N Nzzzv
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

" Quickfix list
nnoremap <C-j> :cnext<CR>zz
nnoremap <C-k> :cprev<CR>zz

" Location list
nnoremap <leader>J :lnext<CR>zz
nnoremap <leader>K :lprev<CR>zz

" Toggle spelling checker
map <F4> :setlocal spell! spelllang=en_us<CR>

" Replace currently selected text with default register without yanking it
xnoremap <leader>p "_dP

" Delete without yanking
nnoremap <leader>d "_d
vnoremap <leader>d "_d

" Cancel
inoremap <C-c> <Esc>

" Replace
nnoremap <leader>s :%s/\<<C-R><C-W>\>/<C-R><C-W>/gI<Left><Left><Left>

" Make file executable
nnoremap <silent> <leader>x :!chmod +x %<CR>

" Copy the current file's path
nnoremap yp :exec setreg("+", expand("%:p"))<CR>

" Switch editing file
nnoremap <leader>e :e <C-R>%

" Open a file name under cursor in a new vertical split
nnoremap <leader>gf :vertical wincmd f<CR>

" Split explorer
nnoremap - :Ex<CR>

" Switch between C source and header file
nnoremap <F5> :e %:p:s,.h$,.X123X,:s,.c$,.h,:s,.X123X$,.c,<CR>

" Fix the indentation of an entire file
nnoremap <leader>F gg=G''

" Set undo points when deleting text in insert mode
inoremap <C-U> <C-G>u<C-U>
inoremap <C-W> <C-G>u<C-W>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" AUTOCOMMANDS                                                                "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

autocmd BufWritePre * call s:trim_white_space()
function s:trim_white_space()
  let l:save = winsaveview()
  keepjumps keeppatterns silent! %s/\s\+$//e
  keepjumps keeppatterns silent! %s/\%^\n\+//
  keepjumps keeppatterns silent! %s/\(\n\n\)\n\+/\1/
  keepjumps keeppatterns silent! %s/\($\n\s*\)\+\%$//
  call winrestview(l:save)
endfunction

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" COLORS                                                                      "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"colorscheme quiet
"if &background == "light"
"  highlight Comment guifg=#949494             ctermfg=246
"  highlight Normal  guifg=#212427 guibg=white ctermfg=black ctermbg=white
"  highlight! link NormalFloat Normal
"else
"  highlight Comment guifg=#585858             ctermfg=240
"  highlight Normal  guifg=white   guibg=black ctermfg=white ctermbg=black
"  highlight! link NormalFloat Normal
"endif

call s:install_plugin("https://github.com/rose-pine/vim", "rose-pine")
highlight Comment guifg=#949494             ctermfg=246
if &background == "light"
  colorscheme rosepine_dawn
  hi Comment guifg=#9893a5 guibg=NONE gui=NONE cterm=NONE
else
  colorscheme rosepine_moon
  hi Comment guifg=#6e6a86 guibg=NONE gui=NONE cterm=NONE
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" PLUGINS                                                                     "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Disable built-in plugins
let g:loaded_matchit = 0
let g:loaded_matchparen = 0

" Plugins

call s:install_plugin("https://github.com/tpope/vim-fugitive", "vim-fugitive")

set runtimepath+=~/.fzf
nnoremap <C-p> :FZF<CR>
autocmd! FileType fzf tnoremap <buffer> <Esc> <C-c>

call s:install_plugin("https://github.com/tpope/vim-eunuch", "vim-eunuch")
